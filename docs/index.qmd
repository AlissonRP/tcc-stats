---
title: "O Modelo de Regressão com Parametrização Geral"
subtitle: "E Sua Implementação Computacional"
author: "<br> Alisson Rosa <br> <br> Orientador: Prof. Laís Helen Loose"
format: 
    revealjs:
        theme: [serif, custom.scss]
        preview-links: auto
        chalkboard: true
        transition: fade
        controls: true
        logo: "imgs/ufsm.png"
        smaller: false
        bibliography: bib.bib
        nocite: |
                @*
lang: pt
---

## Introdução  {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}

::: {.incremental}
- Nivelamento

<br />

- Parametrização Geral

<br />

- Implementação

<br />

- Problemas?
:::













## Distribuições Eliptícas {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}

O vetor aleatório Y tem distribuição elíptica se sua função densidade de probabilidade existe e é dada por:

$$f_{Y}(y)= |\Sigma|^{-1/2}g[(\mathbf{y}-\mathbf{\mu})^{T}\Sigma^{-1}(\mathbf{y}-\mathbf{\mu})]$$

em que g é dita função geradora e satisfaz:

* $g:[0, \infty) \rightarrow [0, \infty]$
* $\int_{0}^{\infty}u^{\frac{d}{2} -1}g(u)du < \infty$

## Distribuições Eliptícas {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}

* Para o caso da Normal univariada:
 * $\Sigma = \sigma$
 * $g(u) = \exp(\frac{-u}{2})$

## Distribuições Eliptícas {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}


$$f_{Y}(y)= |\Sigma|^{-1/2}g[(\mathbf{y}-\mathbf{\mu})^{T}\Sigma^{-1}(\mathbf{y}-\mathbf{\mu})]$$

* $\Sigma = \sigma$
* $g(u) = \exp(\frac{-u}{2})$

$$f_{Y}(y)= \sigma^{-1/2}\exp[\frac{1}{2}(y-\mu)^2\sigma^{-1}]$$












## Distribuições Eliptícas {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}


![](imgs/g_func.png)

## Propriedade {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}


::: {#thm-line}

## Transformações Afins {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}




Sejam A uma matrix $(rxd)$ de posto r e $\mathbf{a}$ um vetor r-dimensional, então vale que:
Se $Y \sim \xi_d(\mu, \Sigma)$, então:
$$W = AY + a  \sim  \xi_r(A\mu + a, A\Sigma A^{T})$$
:::

##  Modelo de Regressão com Parametrização Geral {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}

Seja $Y_i$ um vetor aleatório e $x_i$ covariáveis conhecidas, o modelo definido como:

$$Y_i = \mu_i(\theta) + \epsilon_i$$

## Modelo de Regressão Linear {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}

$$Y_i = x_i^{T}\beta + e_i \quad \text{onde}\quad   e_i \sim \xi(0, \sigma^2)$$

* $\mu_i(\theta) = x_i^T\beta$
* $\Sigma_i(\theta) = \sigma^2$

* Para o caso Heterocedastico $\Sigma_i(\theta) = \sigma_i^2$


## Modelos não Lineares {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}

$$Y_i = h(x, \theta) + e_i \quad \text{onde}\quad   e_i \sim \xi(0, \sigma^2)$$

*  $Y_i =  \theta_1 + \dfrac{\theta_2}{2 + \theta_3x_i^{\theta_4}} + u_i$

<br />

*  $z_i =  \exp\bigg(\beta_0 + \dfrac{\beta_1x_1}{1 + \beta_3x_i}\bigg) + u_i$


## Estimação dos Parâmetros {background-image="https://www.slidebackground.com/uploads/statistics-background/statistics-success-accounting-video-19.jpg" background-opacity=0.04}

Pode-se encontrar os estimadores, maximizando a seguinte função:

$$\ell(\theta) = \sum_{i=1}^{n}\ell_i(\theta)$$


Onde $\ell_i(\theta)=-\dfrac{1}{2}\log|\Sigma_i|+\log g(u_i)$ e

* $u_i = z_i^{T}\Sigma_i^{-1}z_i$

* $z_i = Y_i - \mu_i$

# Objetivo {background-image="https://media.licdn.com/dms/image/D5612AQGIo_Wi-D3lmA/article-cover_image-shrink_720_1280/0/1660017898740?e=2147483647&v=beta&t=wM2JnLCd_rkk9rFn38oTo2uIj6NVYT4Rf0sDWSI2d6A" background-opacity=0.2}

* Implementar Computacionalmente o Modelo em R

## Implementação {background-image="https://media.licdn.com/dms/image/D5612AQGIo_Wi-D3lmA/article-cover_image-shrink_720_1280/0/1660017898740?e=2147483647&v=beta&t=wM2JnLCd_rkk9rFn38oTo2uIj6NVYT4Rf0sDWSI2d6A" background-opacity=0.07}
Modelos "tradicionais" em R:

::: incremental

* ```y ~ x1 + x2 + x3 + x8```

<br>


* ```Species ~ Sepal.Length + Petal.Length```


* ```dependente ~ .```


<br>

* "Qualquer" estrutura de média e covariância
:::


## Implementação {background-image="https://media.licdn.com/dms/image/D5612AQGIo_Wi-D3lmA/article-cover_image-shrink_720_1280/0/1660017898740?e=2147483647&v=beta&t=wM2JnLCd_rkk9rFn38oTo2uIj6NVYT4Rf0sDWSI2d6A" background-opacity=0.07}

::: incremental
* `mu_formula` a model formula including variables and parameters
  * `y ~ beta0 + beta1 * X1`
  * `z ~ w1 + w7 * price`

* Mas quem são os parâmetros?
:::


## {background-image="https://media.licdn.com/dms/image/D5612AQGIo_Wi-D3lmA/article-cover_image-shrink_720_1280/0/1660017898740?e=2147483647&v=beta&t=wM2JnLCd_rkk9rFn38oTo2uIj6NVYT4Rf0sDWSI2d6A" background-opacity=0.07}

* `var_formula` a  model formula for the diagonal of covariance matrix
    * `~ sig1 + sig2 * X2`
    * `~ w1 + sig1 * price`
* `data` A data frame in which to evaluate the variables in `mu_formula` and `var_formula`.
* `dist` Inform the distribution of your data


## {background-image="https://media.licdn.com/dms/image/D5612AQGIo_Wi-D3lmA/article-cover_image-shrink_720_1280/0/1660017898740?e=2147483647&v=beta&t=wM2JnLCd_rkk9rFn38oTo2uIj6NVYT4Rf0sDWSI2d6A" background-opacity=0.07}
```{r}
#| echo: true
library(generalreg)
X <- data.frame(x1 = rnorm(50), x2 = rnorm(50))
y <- 2 + 3 * X$x1 + 2 * X$x2
data <- data.frame(y, X)
fit <- generalreg(data, mu_formula = y ~ beta0 + beta1 * x1 + beta2 * x2, dist='normal')
fit
```

## {background-image="https://media.licdn.com/dms/image/D5612AQGIo_Wi-D3lmA/article-cover_image-shrink_720_1280/0/1660017898740?e=2147483647&v=beta&t=wM2JnLCd_rkk9rFn38oTo2uIj6NVYT4Rf0sDWSI2d6A" background-opacity=0.07}
```{r}
#| echo: true

fit |> summary()
```




## Problemas Atuais {background-image="https://media.licdn.com/dms/image/D5612AQGIo_Wi-D3lmA/article-cover_image-shrink_720_1280/0/1660017898740?e=2147483647&v=beta&t=wM2JnLCd_rkk9rFn38oTo2uIj6NVYT4Rf0sDWSI2d6A" background-opacity=0.07}

::: incremental
* Ajustar a implementação  da estrutura de covariância


* Reestruturar todas as funções do `stats` para funcionar na classe `generalreg`

* Implementar modelos mais específicos

* Entrar em mais uma luta com o *CRAN*



:::






# Obrigado pela Atenção! {background-image="imgs/ufsm.png" background-opacity=0.02}

# Bibliografia



